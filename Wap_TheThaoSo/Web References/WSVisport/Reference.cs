//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18408.
// 
#pragma warning disable 1591

namespace Wap_TheThaoSo.WSVisport {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WebServiceSoap", Namespace="http://tempuri.org/")]
    public partial class WebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback WSProcessMoOperationCompleted;
        
        private System.Threading.SendOrPostCallback WSProcessMoThanTaiOperationCompleted;
        
        private System.Threading.SendOrPostCallback WSProcessMoVClipOperationCompleted;
        
        private System.Threading.SendOrPostCallback WSProcessMoSportGameOperationCompleted;
        
        private System.Threading.SendOrPostCallback WsMo949ProcessOperationCompleted;
        
        private System.Threading.SendOrPostCallback WSWorldCupMoProcessOperationCompleted;
        
        private System.Threading.SendOrPostCallback LiveNewsWorldCupProcessOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateGiffCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ImportUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback WsBigPromotionMoProcessOperationCompleted;
        
        private System.Threading.SendOrPostCallback WSProcessMoViSportWapOperationCompleted;
        
        private System.Threading.SendOrPostCallback WSProcessMoViSportWap_NewOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WebService() {
            this.Url = global::Wap_TheThaoSo.Properties.Settings.Default.Wap_TheThaoSo_WSVisport_WebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event WSProcessMoCompletedEventHandler WSProcessMoCompleted;
        
        /// <remarks/>
        public event WSProcessMoThanTaiCompletedEventHandler WSProcessMoThanTaiCompleted;
        
        /// <remarks/>
        public event WSProcessMoVClipCompletedEventHandler WSProcessMoVClipCompleted;
        
        /// <remarks/>
        public event WSProcessMoSportGameCompletedEventHandler WSProcessMoSportGameCompleted;
        
        /// <remarks/>
        public event WsMo949ProcessCompletedEventHandler WsMo949ProcessCompleted;
        
        /// <remarks/>
        public event WSWorldCupMoProcessCompletedEventHandler WSWorldCupMoProcessCompleted;
        
        /// <remarks/>
        public event LiveNewsWorldCupProcessCompletedEventHandler LiveNewsWorldCupProcessCompleted;
        
        /// <remarks/>
        public event GenerateGiffCodeCompletedEventHandler GenerateGiffCodeCompleted;
        
        /// <remarks/>
        public event ImportUserCompletedEventHandler ImportUserCompleted;
        
        /// <remarks/>
        public event WsBigPromotionMoProcessCompletedEventHandler WsBigPromotionMoProcessCompleted;
        
        /// <remarks/>
        public event WSProcessMoViSportWapCompletedEventHandler WSProcessMoViSportWapCompleted;
        
        /// <remarks/>
        public event WSProcessMoViSportWap_NewCompletedEventHandler WSProcessMoViSportWap_NewCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WSProcessMo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string WSProcessMo(string User_ID, string Service_ID, string Command_Code, string Message, string Request_ID) {
            object[] results = this.Invoke("WSProcessMo", new object[] {
                        User_ID,
                        Service_ID,
                        Command_Code,
                        Message,
                        Request_ID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void WSProcessMoAsync(string User_ID, string Service_ID, string Command_Code, string Message, string Request_ID) {
            this.WSProcessMoAsync(User_ID, Service_ID, Command_Code, Message, Request_ID, null);
        }
        
        /// <remarks/>
        public void WSProcessMoAsync(string User_ID, string Service_ID, string Command_Code, string Message, string Request_ID, object userState) {
            if ((this.WSProcessMoOperationCompleted == null)) {
                this.WSProcessMoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWSProcessMoOperationCompleted);
            }
            this.InvokeAsync("WSProcessMo", new object[] {
                        User_ID,
                        Service_ID,
                        Command_Code,
                        Message,
                        Request_ID}, this.WSProcessMoOperationCompleted, userState);
        }
        
        private void OnWSProcessMoOperationCompleted(object arg) {
            if ((this.WSProcessMoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WSProcessMoCompleted(this, new WSProcessMoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WSProcessMoThanTai", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string WSProcessMoThanTai(string User_ID, string Service_ID, string Command_Code, string Message, string Request_ID) {
            object[] results = this.Invoke("WSProcessMoThanTai", new object[] {
                        User_ID,
                        Service_ID,
                        Command_Code,
                        Message,
                        Request_ID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void WSProcessMoThanTaiAsync(string User_ID, string Service_ID, string Command_Code, string Message, string Request_ID) {
            this.WSProcessMoThanTaiAsync(User_ID, Service_ID, Command_Code, Message, Request_ID, null);
        }
        
        /// <remarks/>
        public void WSProcessMoThanTaiAsync(string User_ID, string Service_ID, string Command_Code, string Message, string Request_ID, object userState) {
            if ((this.WSProcessMoThanTaiOperationCompleted == null)) {
                this.WSProcessMoThanTaiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWSProcessMoThanTaiOperationCompleted);
            }
            this.InvokeAsync("WSProcessMoThanTai", new object[] {
                        User_ID,
                        Service_ID,
                        Command_Code,
                        Message,
                        Request_ID}, this.WSProcessMoThanTaiOperationCompleted, userState);
        }
        
        private void OnWSProcessMoThanTaiOperationCompleted(object arg) {
            if ((this.WSProcessMoThanTaiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WSProcessMoThanTaiCompleted(this, new WSProcessMoThanTaiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WSProcessMoVClip", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string WSProcessMoVClip(string User_ID, string Service_ID, string Command_Code, string Message, string Request_ID) {
            object[] results = this.Invoke("WSProcessMoVClip", new object[] {
                        User_ID,
                        Service_ID,
                        Command_Code,
                        Message,
                        Request_ID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void WSProcessMoVClipAsync(string User_ID, string Service_ID, string Command_Code, string Message, string Request_ID) {
            this.WSProcessMoVClipAsync(User_ID, Service_ID, Command_Code, Message, Request_ID, null);
        }
        
        /// <remarks/>
        public void WSProcessMoVClipAsync(string User_ID, string Service_ID, string Command_Code, string Message, string Request_ID, object userState) {
            if ((this.WSProcessMoVClipOperationCompleted == null)) {
                this.WSProcessMoVClipOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWSProcessMoVClipOperationCompleted);
            }
            this.InvokeAsync("WSProcessMoVClip", new object[] {
                        User_ID,
                        Service_ID,
                        Command_Code,
                        Message,
                        Request_ID}, this.WSProcessMoVClipOperationCompleted, userState);
        }
        
        private void OnWSProcessMoVClipOperationCompleted(object arg) {
            if ((this.WSProcessMoVClipCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WSProcessMoVClipCompleted(this, new WSProcessMoVClipCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WSProcessMoSportGame", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string WSProcessMoSportGame(string User_ID, string Service_ID, string Command_Code, string Message, string Request_ID) {
            object[] results = this.Invoke("WSProcessMoSportGame", new object[] {
                        User_ID,
                        Service_ID,
                        Command_Code,
                        Message,
                        Request_ID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void WSProcessMoSportGameAsync(string User_ID, string Service_ID, string Command_Code, string Message, string Request_ID) {
            this.WSProcessMoSportGameAsync(User_ID, Service_ID, Command_Code, Message, Request_ID, null);
        }
        
        /// <remarks/>
        public void WSProcessMoSportGameAsync(string User_ID, string Service_ID, string Command_Code, string Message, string Request_ID, object userState) {
            if ((this.WSProcessMoSportGameOperationCompleted == null)) {
                this.WSProcessMoSportGameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWSProcessMoSportGameOperationCompleted);
            }
            this.InvokeAsync("WSProcessMoSportGame", new object[] {
                        User_ID,
                        Service_ID,
                        Command_Code,
                        Message,
                        Request_ID}, this.WSProcessMoSportGameOperationCompleted, userState);
        }
        
        private void OnWSProcessMoSportGameOperationCompleted(object arg) {
            if ((this.WSProcessMoSportGameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WSProcessMoSportGameCompleted(this, new WSProcessMoSportGameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WsMo949Process", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string WsMo949Process(string User_ID, string Service_ID, string Command_Code, string Message, string Request_ID) {
            object[] results = this.Invoke("WsMo949Process", new object[] {
                        User_ID,
                        Service_ID,
                        Command_Code,
                        Message,
                        Request_ID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void WsMo949ProcessAsync(string User_ID, string Service_ID, string Command_Code, string Message, string Request_ID) {
            this.WsMo949ProcessAsync(User_ID, Service_ID, Command_Code, Message, Request_ID, null);
        }
        
        /// <remarks/>
        public void WsMo949ProcessAsync(string User_ID, string Service_ID, string Command_Code, string Message, string Request_ID, object userState) {
            if ((this.WsMo949ProcessOperationCompleted == null)) {
                this.WsMo949ProcessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWsMo949ProcessOperationCompleted);
            }
            this.InvokeAsync("WsMo949Process", new object[] {
                        User_ID,
                        Service_ID,
                        Command_Code,
                        Message,
                        Request_ID}, this.WsMo949ProcessOperationCompleted, userState);
        }
        
        private void OnWsMo949ProcessOperationCompleted(object arg) {
            if ((this.WsMo949ProcessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WsMo949ProcessCompleted(this, new WsMo949ProcessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WSWorldCupMoProcess", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string WSWorldCupMoProcess(string User_ID, string Service_ID, string Command_Code, string Message, string Request_ID) {
            object[] results = this.Invoke("WSWorldCupMoProcess", new object[] {
                        User_ID,
                        Service_ID,
                        Command_Code,
                        Message,
                        Request_ID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void WSWorldCupMoProcessAsync(string User_ID, string Service_ID, string Command_Code, string Message, string Request_ID) {
            this.WSWorldCupMoProcessAsync(User_ID, Service_ID, Command_Code, Message, Request_ID, null);
        }
        
        /// <remarks/>
        public void WSWorldCupMoProcessAsync(string User_ID, string Service_ID, string Command_Code, string Message, string Request_ID, object userState) {
            if ((this.WSWorldCupMoProcessOperationCompleted == null)) {
                this.WSWorldCupMoProcessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWSWorldCupMoProcessOperationCompleted);
            }
            this.InvokeAsync("WSWorldCupMoProcess", new object[] {
                        User_ID,
                        Service_ID,
                        Command_Code,
                        Message,
                        Request_ID}, this.WSWorldCupMoProcessOperationCompleted, userState);
        }
        
        private void OnWSWorldCupMoProcessOperationCompleted(object arg) {
            if ((this.WSWorldCupMoProcessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WSWorldCupMoProcessCompleted(this, new WSWorldCupMoProcessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LiveNewsWorldCupProcess", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LiveNewsWorldCupProcess(string User_ID, string Service_ID, string Command_Code, int matchId, string teamCode) {
            object[] results = this.Invoke("LiveNewsWorldCupProcess", new object[] {
                        User_ID,
                        Service_ID,
                        Command_Code,
                        matchId,
                        teamCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LiveNewsWorldCupProcessAsync(string User_ID, string Service_ID, string Command_Code, int matchId, string teamCode) {
            this.LiveNewsWorldCupProcessAsync(User_ID, Service_ID, Command_Code, matchId, teamCode, null);
        }
        
        /// <remarks/>
        public void LiveNewsWorldCupProcessAsync(string User_ID, string Service_ID, string Command_Code, int matchId, string teamCode, object userState) {
            if ((this.LiveNewsWorldCupProcessOperationCompleted == null)) {
                this.LiveNewsWorldCupProcessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLiveNewsWorldCupProcessOperationCompleted);
            }
            this.InvokeAsync("LiveNewsWorldCupProcess", new object[] {
                        User_ID,
                        Service_ID,
                        Command_Code,
                        matchId,
                        teamCode}, this.LiveNewsWorldCupProcessOperationCompleted, userState);
        }
        
        private void OnLiveNewsWorldCupProcessOperationCompleted(object arg) {
            if ((this.LiveNewsWorldCupProcessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LiveNewsWorldCupProcessCompleted(this, new LiveNewsWorldCupProcessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GenerateGiffCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GenerateGiffCode(string userId, string userName, string password) {
            object[] results = this.Invoke("GenerateGiffCode", new object[] {
                        userId,
                        userName,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateGiffCodeAsync(string userId, string userName, string password) {
            this.GenerateGiffCodeAsync(userId, userName, password, null);
        }
        
        /// <remarks/>
        public void GenerateGiffCodeAsync(string userId, string userName, string password, object userState) {
            if ((this.GenerateGiffCodeOperationCompleted == null)) {
                this.GenerateGiffCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateGiffCodeOperationCompleted);
            }
            this.InvokeAsync("GenerateGiffCode", new object[] {
                        userId,
                        userName,
                        password}, this.GenerateGiffCodeOperationCompleted, userState);
        }
        
        private void OnGenerateGiffCodeOperationCompleted(object arg) {
            if ((this.GenerateGiffCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateGiffCodeCompleted(this, new GenerateGiffCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ImportUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ImportUser(string userId, string userName, string passWord, string mtContent, int chargedDay) {
            object[] results = this.Invoke("ImportUser", new object[] {
                        userId,
                        userName,
                        passWord,
                        mtContent,
                        chargedDay});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ImportUserAsync(string userId, string userName, string passWord, string mtContent, int chargedDay) {
            this.ImportUserAsync(userId, userName, passWord, mtContent, chargedDay, null);
        }
        
        /// <remarks/>
        public void ImportUserAsync(string userId, string userName, string passWord, string mtContent, int chargedDay, object userState) {
            if ((this.ImportUserOperationCompleted == null)) {
                this.ImportUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportUserOperationCompleted);
            }
            this.InvokeAsync("ImportUser", new object[] {
                        userId,
                        userName,
                        passWord,
                        mtContent,
                        chargedDay}, this.ImportUserOperationCompleted, userState);
        }
        
        private void OnImportUserOperationCompleted(object arg) {
            if ((this.ImportUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImportUserCompleted(this, new ImportUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WsBigPromotionMoProcess", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string WsBigPromotionMoProcess(string User_ID, string Service_ID, string Command_Code, string Message, string Request_ID) {
            object[] results = this.Invoke("WsBigPromotionMoProcess", new object[] {
                        User_ID,
                        Service_ID,
                        Command_Code,
                        Message,
                        Request_ID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void WsBigPromotionMoProcessAsync(string User_ID, string Service_ID, string Command_Code, string Message, string Request_ID) {
            this.WsBigPromotionMoProcessAsync(User_ID, Service_ID, Command_Code, Message, Request_ID, null);
        }
        
        /// <remarks/>
        public void WsBigPromotionMoProcessAsync(string User_ID, string Service_ID, string Command_Code, string Message, string Request_ID, object userState) {
            if ((this.WsBigPromotionMoProcessOperationCompleted == null)) {
                this.WsBigPromotionMoProcessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWsBigPromotionMoProcessOperationCompleted);
            }
            this.InvokeAsync("WsBigPromotionMoProcess", new object[] {
                        User_ID,
                        Service_ID,
                        Command_Code,
                        Message,
                        Request_ID}, this.WsBigPromotionMoProcessOperationCompleted, userState);
        }
        
        private void OnWsBigPromotionMoProcessOperationCompleted(object arg) {
            if ((this.WsBigPromotionMoProcessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WsBigPromotionMoProcessCompleted(this, new WsBigPromotionMoProcessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WSProcessMoViSportWap", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string WSProcessMoViSportWap(string User_ID, string Service_ID, string Command_Code, string Message, string Request_ID) {
            object[] results = this.Invoke("WSProcessMoViSportWap", new object[] {
                        User_ID,
                        Service_ID,
                        Command_Code,
                        Message,
                        Request_ID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void WSProcessMoViSportWapAsync(string User_ID, string Service_ID, string Command_Code, string Message, string Request_ID) {
            this.WSProcessMoViSportWapAsync(User_ID, Service_ID, Command_Code, Message, Request_ID, null);
        }
        
        /// <remarks/>
        public void WSProcessMoViSportWapAsync(string User_ID, string Service_ID, string Command_Code, string Message, string Request_ID, object userState) {
            if ((this.WSProcessMoViSportWapOperationCompleted == null)) {
                this.WSProcessMoViSportWapOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWSProcessMoViSportWapOperationCompleted);
            }
            this.InvokeAsync("WSProcessMoViSportWap", new object[] {
                        User_ID,
                        Service_ID,
                        Command_Code,
                        Message,
                        Request_ID}, this.WSProcessMoViSportWapOperationCompleted, userState);
        }
        
        private void OnWSProcessMoViSportWapOperationCompleted(object arg) {
            if ((this.WSProcessMoViSportWapCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WSProcessMoViSportWapCompleted(this, new WSProcessMoViSportWapCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WSProcessMoViSportWap_New", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string WSProcessMoViSportWap_New(string User_ID, string Service_ID, string Command_Code, string Message, string Request_ID) {
            object[] results = this.Invoke("WSProcessMoViSportWap_New", new object[] {
                        User_ID,
                        Service_ID,
                        Command_Code,
                        Message,
                        Request_ID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void WSProcessMoViSportWap_NewAsync(string User_ID, string Service_ID, string Command_Code, string Message, string Request_ID) {
            this.WSProcessMoViSportWap_NewAsync(User_ID, Service_ID, Command_Code, Message, Request_ID, null);
        }
        
        /// <remarks/>
        public void WSProcessMoViSportWap_NewAsync(string User_ID, string Service_ID, string Command_Code, string Message, string Request_ID, object userState) {
            if ((this.WSProcessMoViSportWap_NewOperationCompleted == null)) {
                this.WSProcessMoViSportWap_NewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWSProcessMoViSportWap_NewOperationCompleted);
            }
            this.InvokeAsync("WSProcessMoViSportWap_New", new object[] {
                        User_ID,
                        Service_ID,
                        Command_Code,
                        Message,
                        Request_ID}, this.WSProcessMoViSportWap_NewOperationCompleted, userState);
        }
        
        private void OnWSProcessMoViSportWap_NewOperationCompleted(object arg) {
            if ((this.WSProcessMoViSportWap_NewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WSProcessMoViSportWap_NewCompleted(this, new WSProcessMoViSportWap_NewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void WSProcessMoCompletedEventHandler(object sender, WSProcessMoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WSProcessMoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WSProcessMoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void WSProcessMoThanTaiCompletedEventHandler(object sender, WSProcessMoThanTaiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WSProcessMoThanTaiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WSProcessMoThanTaiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void WSProcessMoVClipCompletedEventHandler(object sender, WSProcessMoVClipCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WSProcessMoVClipCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WSProcessMoVClipCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void WSProcessMoSportGameCompletedEventHandler(object sender, WSProcessMoSportGameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WSProcessMoSportGameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WSProcessMoSportGameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void WsMo949ProcessCompletedEventHandler(object sender, WsMo949ProcessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WsMo949ProcessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WsMo949ProcessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void WSWorldCupMoProcessCompletedEventHandler(object sender, WSWorldCupMoProcessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WSWorldCupMoProcessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WSWorldCupMoProcessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void LiveNewsWorldCupProcessCompletedEventHandler(object sender, LiveNewsWorldCupProcessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LiveNewsWorldCupProcessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LiveNewsWorldCupProcessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GenerateGiffCodeCompletedEventHandler(object sender, GenerateGiffCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateGiffCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateGiffCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ImportUserCompletedEventHandler(object sender, ImportUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ImportUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ImportUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void WsBigPromotionMoProcessCompletedEventHandler(object sender, WsBigPromotionMoProcessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WsBigPromotionMoProcessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WsBigPromotionMoProcessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void WSProcessMoViSportWapCompletedEventHandler(object sender, WSProcessMoViSportWapCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WSProcessMoViSportWapCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WSProcessMoViSportWapCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void WSProcessMoViSportWap_NewCompletedEventHandler(object sender, WSProcessMoViSportWap_NewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WSProcessMoViSportWap_NewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WSProcessMoViSportWap_NewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591